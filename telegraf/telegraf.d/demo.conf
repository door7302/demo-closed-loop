###############################################################################
#                               GNMI INPUT PLUGIN                             #
###############################################################################
[[inputs.gnmi]]
  addresses = [
      "rtme-mx304-06.englab.juniper.net:9339",
      "rtme-ptx10001-36mr-10.englab.juniper.net:9339"
      ]

  username = "lab"
  password = "lab123" 
  encoding = "proto"
  redial = "10s"
  long_tag = true
  long_field = true
  check_jnpr_extension = true
  bytes2float = true

    [inputs.gnmi.aliases] 
      JUNOS_CMERROR = [
      "/junos/chassis/cmerror/counters"
      ]
      COMPONENTS = [
      "/components/component"
      ]

    [[inputs.gnmi.subscription]]
      name = "COMPONENTS"
      path = "/components/component"
      subscription_mode = "sample"
      sample_interval = "60s"

    [[inputs.gnmi.subscription]]
      name = "JUNOS_CMERROR"
      path = "/junos/system/cmerror/counters"
      subscription_mode = "sample"
      sample_interval = "10s"
  
    [[inputs.gnmi.subscription]]
      name = "INTERFACES"
      path = "/interfaces/interface/state"
      subscription_mode = "sample"
      sample_interval = "15s"
  
###############################################################################
#                             NETCONF INPUT PLUGIN                            #
###############################################################################
[[inputs.netconf_junos]]
  ## Address of the Juniper NETCONF server
  addresses = [
    "rtme-mx304-06.englab.juniper.net",
    "rtme-ptx10001-36mr-10.englab.juniper.net"
    ]

  ## define credentials
  username = "lab"
  password = "lab123"

  ## redial in case of failures after
  redial = "10s"

  ## Time Layout for epoch convertion - specify a sample Date/Time layout - default layout is the following:
  time_layout = "2006-01-02 15:04:05 MST"

   [[inputs.netconf_junos.subscription]]
    ## Name of the measurement that will be emitted
    name = "JUNOS_ALARMS"

    ## the JUNOS RPC to collect 
    junos_rpc = "<get-alarm-information></get-alarm-information>"
  
    ## A list of xpath lite + type to collect / encode 
    ## Each entry in the list is made of: <xpath>:<type>
    ## - xpath lite 
    ## - a type of encoding (supported types : int, float, string, epoch, epoch_ms, epoch_us, epoch_ns)
    ## 
    ## The xpath lite should follow the rpc reply XML document. Optional: you can include btw [] the KEY's name that must use to detect the loop 
    fields = [
      "/alarm-information/alarm-detail[alarm-short-description]/alarm-time:epoch_ms"
      ,"/alarm-information/alarm-detail[alarm-short-description]/alarm-class:string"
      ,"/alarm-information/alarm-detail[alarm-short-description]/alarm-description:string"
      ,"/alarm-information/alarm-detail[alarm-short-description]/alarm-type:string"
    ]

    ## Interval to request the RPC
    sample_interval = "30s" 
  

###############################################################################
#                               PIVOT PLUGIN                                  #
###############################################################################
[[processors.pivot]]
  order = 10
  namepass = [
      "COMPONENTS",
  ]
  tag_key = "/components/component/properties/property/name"
  value_key = "/components/component/properties/property/state/value"

###############################################################################
#                               RENAME PLUGIN                                 #
###############################################################################
[[processors.rename]]
  order = 101
  namepass = [
      "JUNOS_CMERROR",
      "JUNOS_ALARMS",
      "COMPONENTS",
  ]  

  [[processors.rename.replace]] 
    tag = "/components/component/properties/property/@name"
    dest = "property_name"  
  [[processors.rename.replace]] 
    tag = "/components/component/properties/property/name"
    dest = "property_name"  
  [[processors.rename.replace]] 
    tag = "/components/component/@name"
    dest = "component_name"  
  [[processors.rename.replace]] 
    tag = "/components/component/name"
    dest = "component_name"   
  [[processors.rename.replace]] 
    tag = "/junos/chassis/cmerror/counters/name"
    dest = "cmerror_name"  
  [[processors.rename.replace]] 
    field = "/components/component/cpu/utilization/state/avg"
    dest = "core_cpu_avg"  
  [[processors.rename.replace]] 
    field = "/components/component/cpu/utilization/state/instant"
    dest = "core_cpu_instant"
  [[processors.rename.replace]] 
    field = "cpu-utilization-idle"
    dest = "idle_cpu"  
  [[processors.rename.replace]] 
    field = "cpu-utilization-total"
    dest = "linecard_cpu"  
  [[processors.rename.replace]] 
    field = "memory-utilization-heap"
    dest = "linecard_memory"  
  [[processors.rename.replace]] 
    field = "memory-utilization-buffer"
    dest = "buffer_usage"  
  [[processors.rename.replace]] 
    tag = "alarm-short-description"
    dest = "alarm_id_net"  
  [[processors.rename.replace]] 
    field = "/junos/chassis/cmerror/counters/description"
    dest = "cmerror_desc"  
  [[processors.rename.replace]] 
    field = "/junos/chassis/cmerror/counters/fru-slot"
    dest = "cmerror_slot"  
  [[processors.rename.replace]] 
    field = "/junos/chassis/cmerror/counters/identifier"
    dest = "cmerror_id"  
  [[processors.rename.replace]] 
    field = "/junos/chassis/cmerror/counters/last-updated"
    dest = "cmerror_update"  
  [[processors.rename.replace]] 
    field = "/junos/chassis/cmerror/counters/last-cleared-at"
    dest = "cmerror_clear"  
  [[processors.rename.replace]] 
    field = "/junos/chassis/cmerror/counters/occur-count"
    dest = "cmerror_count" 
  [[processors.rename.replace]] 
    field = "alarm-time"
    dest = "alarm_time_net"  
  [[processors.rename.replace]] 
    field = "alarm-class"
    dest = "alarm_severity_net"  
  [[processors.rename.replace]] 
    field = "alarm-description"
    dest = "alarm_text_net"  
  [[processors.rename.replace]] 
    field = "alarm-type"
    dest = "alarm_resource_net"  
    
[[processors.rename]]
  order = 102
  namepass = [
      "INTERFACES",
  ]
  [[processors.rename.replace]] 
    tag = "/interface-qstat-info/interface-qstat-info/state/counters/out-queue/queue-number"
    dest = "queue_id"  
  [[processors.rename.replace]] 
    tag = "/interfaces/interface/state/counters/out-queue/queue-number"
    dest = "queue_id"  
  [[processors.rename.replace]] 
    tag = "/interfaces/interface/name"
    dest = "if_name"  
  [[processors.rename.replace]] 
    tag = "/interfaces/interface/@name"
    dest = "if_name"  
  [[processors.rename.replace]] 
    tag = "/interfaces/interface/if-name"
    dest = "if_name"  
  [[processors.rename.replace]] 
    tag = "/interfaces/interface/@if-name"
    dest = "if_name"  
  [[processors.rename.replace]] 
    tag = "/interface-qstat-info/interface-qstat-info/ifname"
    dest = "if_name"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/in-octets"
    dest = "in_octets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-octets"
    dest = "out_octets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/in-errors"
    dest = "in_errors"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-errors"
    dest = "out_errors"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-in-octets"
    dest = "in_octets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-out-octets"
    dest = "out_octets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-in-errors"
    dest = "in_errors"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-out-errors"
    dest = "out_errors"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/in-pkts"
    dest = "in_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-pkts"
    dest = "out_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/in-multicast-pkts"
    dest = "mcast_in_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-multicast-pkts"
    dest = "mcast_out_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/in-broadcast-pkts"
    dest = "bcast_in_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-broadcast-pkts"
    dest = "bcast_out_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-in-pkts"
    dest = "in_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-out-pkts"
    dest = "out_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-in-multicast-pkts"
    dest = "mcast_in_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-out-multicast-pkts"
    dest = "mcast_out_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-in-broadcast-pkts"
    dest = "bcast_in_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/if-out-broadcast-pkts"
    dest = "bcast_out_pkts"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/bytes"
    dest = "cos_forwarded_octets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/red-drop-pkts"
    dest = "cos_red_dropped_packets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/tail-drop-pkts"
    dest = "cos_tail_dropped_packets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/pkts"
    dest = "cos_forwarded_packets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/queued-bytes"
    dest = "cos_queued_octets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/queued-pkts"
    dest = "cos_queued_packets"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/allocated-buffer-size"
    dest = "cos_buffer_size"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/peak-buffer-occupancy"
    dest = "cos_buffer_peak"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/cur-buffer-occupancy"
    dest = "cos_buffer_cur"  
  [[processors.rename.replace]] 
    field = "/interfaces/interface/state/counters/out-queue/avg-buffer-occupancy"
    dest = "cos_buffer_avg"  
    
###############################################################################
#                                  FILTER PLUGIN                              #
###############################################################################
[[processors.filtering]]
  order = 400
  namepass = [
      "INTERFACES",
  ]
   
  [[processors.filtering.tags]] 
  key = "if_name"
  pattern = "^(et-|xe-|ge-|ae|lt-|ps-|fti-|gr-|demux).*"
  action = "accept" 


###############################################################################
#                               CONVERTER PLUGIN                              #
###############################################################################
[[processors.converter]]
  order = 600
  namepass = [
      "JUNOS_CMERROR",
      "COMPONENTS",
  ]

  [processors.converter.fields] 
    integer = [
      "idle_cpu",
      "linecard_cpu",
      "linecard_memory",
      "buffer_usage",
      "cmerror_slot",
      "value"
    ] 
          
###############################################################################
#                               ENRICHMENT PLUGIN                             #
###############################################################################
#[[processors.enrichment]]
#  order = 800
#  namepass = [
#      "INTERFACES",
#  ]
#  enrichfilepath = "/var/metadata/metadata.json"
#  refreshperiod = 1 
#  level1tagkey = "device" 
#  level2tagkey =  [
#      "if_name"
#  ]
#  twolevels = true


###############################################################################
#                                  RATE PLUGIN                                #
###############################################################################
[[processors.rate]]
  order = 700
  namepass = [
      "INTERFACES",
  ]
  period = "10m"
  suffix = "_rate"
  factor = 1.0
  retention = "1h"
  delta_min = "2s"
  fields = [
      "in_pkts",
      "out_pkts",
      "in_octets",
      "out_octets",
      "mcast_in_pkts",
      "mcast_out_pkts",
      "bcast_in_pkts",
      "bcast_out_pkts",
      "cos_forwarded_octets",
      "cos_forwarded_packets",
      "cos_queued_octets",
      "cos_queued_packets",
      "cos_red_dropped_packets",
      "cos_tail_dropped_packets",
      "in_errors",
      "out_errors"
  ]


###############################################################################
#                                   ENUM PLUGIN                              #
###############################################################################
[[processors.enum]]
  order = 500
  namepass = [
      "INTERFACES"
  ]
  
  [[processors.enum.mapping]]
    tag = "queue_id"
        dest = "queue_name"  


###############################################################################
#                              MONITORING PLUGIN                              #
###############################################################################
[[processors.monitoring]]
  order = 800
  namepass = [
      "INTERFACES",
  ]
  measurement = "ALARMING"
  tag_name = "ALARM_TYPE"
  period = "10m"
  retention = "1h"
    
  [[processors.monitoring.probe]]
    alarm_name = "RED_DROP"
    field = "cos_red_dropped_packets_rate"
    probe_type = "current"
    threshold = 1.0
    operator = "gt"
    copy_tag = true
    tags = [
      "device",
      "if_name",
      "queue_id",
      "queue_name",
    ]
    
  [[processors.monitoring.probe]]
    alarm_name = "TAIL_DROP"
    field = "cos_tail_dropped_packets_rate"
    probe_type = "current"
    threshold = 1.0
    operator = "gt"
    copy_tag = true
    tags = [
      "device",
      "if_name",
      "queue_id",
      "queue_name",
    ]
    
  [[processors.monitoring.probe]]
    alarm_name = "ETH_DROP_IN"
    field = "in_errors_rate"
    probe_type = "current"
    threshold = 1.0
    operator = "gt"
    copy_tag = true
    tags = [
      "device",
      "if_name",
    ]
    
  [[processors.monitoring.probe]]
    alarm_name = "ETH_DROP_OUT"
    field = "out_errors_rate"
    probe_type = "current"
    threshold = 1.0
    operator = "gt"
    copy_tag = true
    tags = [
      "device",
      "if_name",
    ]
  
    [[processors.monitoring.probe]]
    alarm_name = "CPU_HIGH_RE"
    field = "idle_cpu"
    probe_type = "current"
    threshold = 10.0
    operator = "lt"
    copy_tag = true
    tags = [
      "device",
      "component_name"
    ]
    
  [[processors.monitoring.probe]]
    alarm_name = "CPU_HIGH_MPC"
    field = "linecard_cpu"
    probe_type = "current"
    threshold = 80.0
    operator = "gt"
    copy_tag = true
    tags = [
      "device",
      "component_name"
    ]
    
  [[processors.monitoring.probe]]
    alarm_name = "MEM_HIGH_RE"
    field = "buffer_usage"
    probe_type = "current"
    threshold = 80.0
    operator = "gt"
    copy_tag = true
    tags = [
      "device",
      "component_name"
    ]
    
  [[processors.monitoring.probe]]
    alarm_name = "MEM_HIGH_MPC"
    field = "linecard_memory"
    probe_type = "current"
    threshold = 80.0
    operator = "gt"
    copy_tag = true
    tags = [
      "device",
      "component_name"
    ]

###############################################################################
#                              INFLUX OUTPUT PLUGIN                           #
###############################################################################
[[outputs.influxdb]]
  database="demo"
  urls = ["http://influxdb:8086"]
  retention_policy = "autogen"
  fieldpass = [
      "exception",
      "cmerror_desc",
      "cmerror_slot",
      "cmerror_id",
      "cmerror_update",
      "cmerror_clear",
      "cmerror_count",
      "alarm_time_net",
      "alarm_severity_net",
      "alarm_text_net",
      "alarm_resource_net",
      "in_octets_rate",
      "out_octets_rate",
      "in_pkts_rate",
      "out_pkts_rate",
      "in_errors_rate",
      "out_errors_rate",
      "cos_queued_packets_rate",
      "cos_queued_octets_rate",
      "cos_forwarded_octets_rate",
      "cos_red_dropped_packets_rate",
      "cos_tail_dropped_packets_rate",
      "cos_forwarded_packets_rate",
      "cos_buffer_size",
      "cos_buffer_peak",
      "cos_buffer_cur",
      "cos_buffer_avg",
      "mcast_in_pkts_rate",
      "mcast_out_pkts_rate",
      "bcast_in_pkts_rate",
      "bcast_out_pkts_rate",
      "core_cpu_avg",
      "core_cpu_instant",
      "idle_cpu",
      "linecard_cpu",
      "linecard_memory",
      "buffer_usage",
  ]

###############################################################################
#                               KAFKA OUTPUT PLUGIN                           #
###############################################################################
  [[outputs.kafka]]
    brokers = ["kafka:9092"]
    topic = "cmerror" 
    data_format = "json"
    fieldpass = [
        "cmerror_desc",
        "cmerror_slot",
        "cmerror_id",
        "cmerror_update",
        "cmerror_clear",
        "cmerror_count",
    ]
